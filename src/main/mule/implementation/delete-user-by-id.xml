<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
        http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
<!-- [STUDIO:"delete-user-by-id-api-SubFlow"]	<sub-flow name="delete-user-by-id-api-SubFlow" doc:id="237c4f16-d0e1-4d48-8244-36371f06a569">
		<logger level="INFO" doc:name="start Log payload HTTP-get:\users:sapi-database" message="start Log payload HTTP-get:\users:sapi-database #[payload&#93;" />
		
		<!&#45;&#45; Retrieve the id from the database &#45;&#45;>

		<!&#45;&#45; Store the retrieved id in a variable &#45;&#45;>
		<flow-ref doc:name="delete-user-by-id-variables-SubFlow" doc:id="e61ce752-827d-4aa5-b2c7-98ccc324f280" name="delete-user-by-id-variables-SubFlow"/>
		<db:delete doc:name="Delete users by id" config-ref="Database_Config_User">
		      <db:sql><![CDATA[#[vars.setDeleteSqlQuerry&#93;&#93;&#93;></db:sql>
		      <db:input-parameters><![CDATA[#[{
  id: vars.id 
}&#93;&#93;&#93;></db:input-parameters>
		    </db:delete>
		<ee:transform doc:name="fail Function" doc:id="7a664eab-dd46-4e5d-9c69-1596651d25f0">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0 
output application/json
import * from dw::Runtime
fun userNotFound(message) = if(payload == 0)
fail("User Not Found")
else
payload
&#45;&#45;-
try(() ->userNotFound(payload))
&#93;&#93;></ee:set-payload>
				</ee:message>
			</ee:transform>
		<choice doc:name="Choice" doc:id="fb27366f-634e-4ab8-9708-ed353efe939f" >
			<when expression="payload.success == true">
				<set-variable value="204" doc:name="httpStatus" doc:id="45d98fd7-5bb1-40f9-81d7-e8a029f5bfce" variableName="httpStatus" />
			</when>
			<otherwise >
				<raise-error doc:name="Raise error" doc:id="86a79a62-9753-4e9b-b46b-767a71bb88c3" type="CUSTOM:USER_NOT_FOUND_DELETE" description="The user was not found on Database"/>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="Log setUriParamsForUserID" message="setUriParamsForUserID: #[vars.setUriParamsForUserID&#93;" />
	

</sub-flow> [STUDIO] -->
<!-- [STUDIO:"delete-user-by-id-ErrorHandler"]	<error-handler name="delete-user-by-id-ErrorHandler" doc:id="5d08f75a-1d6c-409e-a399-aea4dfb6dced" >
		<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="83f1c254-3436-4fd8-81ed-ec21cffb9f98" type="CUSTOM:USER_NOT_FOUND_DELETE" >
			<set-variable value="404" doc:name="httpStatus" doc:id="e51e953c-108d-4d5d-8b38-154395dcef10" variableName="httpStatus" />
			<ee:transform doc:name="empty payload" doc:id="5a76c795-3a15-4a0f-a92f-2441701f4b0a" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/java
&#45;&#45;-
""
&#93;&#93;></ee:set-payload>
				</ee:message>
			</ee:transform>
		</on-error-propagate>
	</error-handler> [STUDIO] -->
<!-- [STUDIO:"delete-user-by-id-variables-SubFlow"]	<sub-flow name="delete-user-by-id-variables-SubFlow" doc:id="4831c420-a36f-43d9-855b-98f41b62a030" >
		<set-variable value='#[attributes.uriParams."Id"&#93;' doc:name="id" variableName="id" />
		<set-variable value='#["DELETE FROM USER WHERE id = :id;"&#93;' doc:name="setDeleteSqlQuerry" doc:id="d8afdbed-c51a-4818-bf81-71be1661b4f1" variableName="setDeleteSqlQuerry" />
	
</sub-flow> [STUDIO] -->
	
	

</mule>